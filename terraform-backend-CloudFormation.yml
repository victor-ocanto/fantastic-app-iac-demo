AWSTemplateFormatVersion: '2010-09-09'
Description: Terraform Backend Resources (S3, DynamoDB, IAM)

Parameters:
  Region:
    Type: String
    Description: AWS region where resources will be created
    Default: us-east-1

Resources:
  TerraformStateBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "terraform-state-${AWS::AccountId}-${AWS::Region}"
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  TerraformStateBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref TerraformStateBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - s3:PutObject
              - s3:GetObject
              - s3:ListBucket
              - s3:DeleteObject
            Resource:
              - !Sub "arn:aws:s3:::${TerraformStateBucket}"
              - !Sub "arn:aws:s3:::${TerraformStateBucket}/*"

  TerraformLockTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "terraform-locks-${AWS::AccountId}"
      AttributeDefinitions:
        - AttributeName: LockID
          AttributeType: S
      KeySchema:
        - AttributeName: LockID
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true

  TerraformStateRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: TerraformStateRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: sts:AssumeRole
      Policies:
        - PolicyName: TerraformS3StateAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:DeleteObject
                Resource:
                  - !Sub "arn:aws:s3:::${TerraformStateBucket}"
                  - !Sub "arn:aws:s3:::${TerraformStateBucket}/*"
        - PolicyName: TerraformDynamoDBLockAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:DescribeTable
                Resource: !GetAtt TerraformLockTable.Arn

Outputs:
  TerraformStateBucketName:
    Description: Name of the S3 bucket for Terraform state
    Value: !Ref TerraformStateBucket
  TerraformLockTableName:
    Description: Name of the DynamoDB table for Terraform state locking
    Value: !Ref TerraformLockTable
  TerraformStateRoleArn:
    Description: ARN of the IAM role for Terraform state access
    Value: !GetAtt TerraformStateRole.Arn
  Region:
    Description: AWS region where resources were created
    Value: !Ref Region
